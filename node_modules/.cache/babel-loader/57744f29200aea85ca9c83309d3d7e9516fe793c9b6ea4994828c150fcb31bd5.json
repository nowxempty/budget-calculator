{"ast":null,"code":"var _jsxFileName = \"/Users/leejaebin/Desktop/\\u1106\\u1162\\u11A8\\u1107\\u116E\\u11A8 \\u1111\\u1173\\u1105\\u1169/\\u1100\\u116E\\u1105\\u1173\\u11B7\\u1110\\u1169\\u11AB KDT/\\u1104\\u1161\\u1105\\u1161\\u1112\\u1161\\u1106\\u1167 \\u1107\\u1162\\u110B\\u116E\\u1102\\u1173\\u11AB React/react-todo-app/src/components/Lists.js\";\nimport React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport List from \"./List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists({\n  todoData,\n  setTodoData\n}) {\n  const handleEnd = result => {\n    // result 매개변수에는 source 항목 및 대상 위치와 같은 드래그 이벤트에 대한 정보가 포함됩니다.\n    console.log(result);\n    // 목적지가 없으면(이벤트 취소) 이 함수를 종료합니다.\n    if (!result.destination) return;\n\n    // 리액트 불변성을 지켜주기 위해 새로운 todoData 생성 \n    const newTodoData = todoData;\n\n    // 1. 변경시키는 아이템을 배열에서 지워줍니다.\n    // 2. return 값으로 지워진 아이템을 잡아줍니다.\n    const [reorderedItem] = newTodoData.splice(result.source.index, 1);\n\n    // 원하는 자리에 reorderedItem을 insert 해줍니다.\n    newTodoData.splice(result.destination.index, 0, reorderedItem);\n    setTodoData(newTodoData);\n    localStorage.setItem(\"todoData\", JSON.stringify(newTodoData));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"to-dos\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [todoData.map((data, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: data.id.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(List, {\n              id: data.id,\n              title: data.title,\n              completed: data.completed,\n              todoData: todoData,\n              setTodoData: setTodoData,\n              provided: provided,\n              snapshot: snapshot\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Lists;\nvar _c;\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Draggable","List","jsxDEV","_jsxDEV","Lists","todoData","setTodoData","handleEnd","result","console","log","destination","newTodoData","reorderedItem","splice","source","index","localStorage","setItem","JSON","stringify","children","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","map","data","draggableId","id","toString","snapshot","title","completed","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["/Users/leejaebin/Desktop/맥북 프로/구름톤 KDT/따라하며 배우는 React/react-todo-app/src/components/Lists.js"],"sourcesContent":["import React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport List from \"./List\";\n\nexport default function Lists({ todoData, setTodoData }) {\n\n  const handleEnd = (result) => {\n    // result 매개변수에는 source 항목 및 대상 위치와 같은 드래그 이벤트에 대한 정보가 포함됩니다.\n    console.log(result);\n    // 목적지가 없으면(이벤트 취소) 이 함수를 종료합니다.\n    if (!result.destination) return;\n\n    // 리액트 불변성을 지켜주기 위해 새로운 todoData 생성 \n    const newTodoData = todoData;\n\n    // 1. 변경시키는 아이템을 배열에서 지워줍니다.\n    // 2. return 값으로 지워진 아이템을 잡아줍니다.\n    const [reorderedItem] = newTodoData.splice(result.source.index, 1);\n\n    // 원하는 자리에 reorderedItem을 insert 해줍니다.\n    newTodoData.splice(result.destination.index, 0, reorderedItem);\n    setTodoData(newTodoData);\n    localStorage.setItem(\"todoData\", JSON.stringify(newTodoData));\n  };\n\n  return (\n    <div>\n      <DragDropContext onDragEnd={handleEnd}>\n\n        <Droppable droppableId=\"to-dos\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {todoData.map((data, index) => (\n                <Draggable\n                  key={data.id}\n                  draggableId={data.id.toString()}\n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <List\n                      key={data.id}\n                      id={data.id}\n                      title={data.title}\n                      completed={data.completed}\n                      todoData={todoData}\n                      setTodoData={setTodoData}\n                      provided={provided}\n                      snapshot={snapshot}\n                    />\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n\n      </DragDropContext>\n    </div>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAEvD,MAAMC,SAAS,GAAIC,MAAM,IAAK;IAC5B;IACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA,IAAI,CAACA,MAAM,CAACG,WAAW,EAAE;;IAEzB;IACA,MAAMC,WAAW,GAAGP,QAAQ;;IAE5B;IACA;IACA,MAAM,CAACQ,aAAa,CAAC,GAAGD,WAAW,CAACE,MAAM,CAACN,MAAM,CAACO,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;;IAElE;IACAJ,WAAW,CAACE,MAAM,CAACN,MAAM,CAACG,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEH,aAAa,CAAC;IAC9DP,WAAW,CAACM,WAAW,CAAC;IACxBK,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW,CAAC,CAAC;EAC/D,CAAC;EAED,oBACET,OAAA;IAAAkB,QAAA,eACElB,OAAA,CAACL,eAAe;MAACwB,SAAS,EAAEf,SAAU;MAAAc,QAAA,eAEpClB,OAAA,CAACJ,SAAS;QAACwB,WAAW,EAAC,QAAQ;QAAAF,QAAA,EAC3BG,QAAQ,iBACRrB,OAAA;UAAA,GAASqB,QAAQ,CAACC,cAAc;UAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAAAN,QAAA,GACtDhB,QAAQ,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEb,KAAK,kBACxBb,OAAA,CAACH,SAAS;YAER8B,WAAW,EAAED,IAAI,CAACE,EAAE,CAACC,QAAQ,CAAC,CAAE;YAChChB,KAAK,EAAEA,KAAM;YAAAK,QAAA,EAEZA,CAACG,QAAQ,EAAES,QAAQ,kBAClB9B,OAAA,CAACF,IAAI;cAEH8B,EAAE,EAAEF,IAAI,CAACE,EAAG;cACZG,KAAK,EAAEL,IAAI,CAACK,KAAM;cAClBC,SAAS,EAAEN,IAAI,CAACM,SAAU;cAC1B9B,QAAQ,EAAEA,QAAS;cACnBC,WAAW,EAAEA,WAAY;cACzBkB,QAAQ,EAAEA,QAAS;cACnBS,QAAQ,EAAEA;YAAS,GAPdJ,IAAI,CAACE,EAAE;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQb;UACF,GAfIV,IAAI,CAACE,EAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBH,CACZ,CAAC,EACDf,QAAQ,CAACgB,WAAW;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACE,EAAA,GAxDuBrC,KAAK;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}